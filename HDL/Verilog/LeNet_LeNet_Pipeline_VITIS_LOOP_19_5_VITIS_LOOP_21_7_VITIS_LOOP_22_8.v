// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LeNet_LeNet_Pipeline_VITIS_LOOP_19_5_VITIS_LOOP_21_7_VITIS_LOOP_22_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        kernel_weight_layer3_V_address0,
        kernel_weight_layer3_V_ce0,
        kernel_weight_layer3_V_we0,
        kernel_weight_layer3_V_d0,
        param_arr_address0,
        param_arr_ce0,
        param_arr_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] kernel_weight_layer3_V_address0;
output   kernel_weight_layer3_V_ce0;
output   kernel_weight_layer3_V_we0;
output  [15:0] kernel_weight_layer3_V_d0;
output  [11:0] param_arr_address0;
output   param_arr_ce0;
input  [15:0] param_arr_q0;

reg ap_idle;
reg kernel_weight_layer3_V_ce0;
reg kernel_weight_layer3_V_we0;
reg param_arr_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln19_fu_211_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln20_fu_250_p2;
reg   [0:0] icmp_ln20_reg_759;
wire   [0:0] and_ln19_1_fu_304_p2;
reg   [0:0] and_ln19_1_reg_765;
wire   [0:0] or_ln20_fu_332_p2;
reg   [0:0] or_ln20_reg_770;
wire   [0:0] and_ln20_fu_358_p2;
reg   [0:0] and_ln20_reg_775;
wire   [3:0] select_ln21_fu_390_p3;
reg   [3:0] select_ln21_reg_780;
wire   [63:0] index_7_cast_fu_414_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln23_2_fu_659_p1;
reg   [9:0] index_fu_82;
wire   [9:0] add_ln23_fu_419_p2;
wire    ap_loop_init;
reg   [3:0] k_fu_86;
wire   [3:0] add_ln22_fu_425_p2;
reg   [1:0] l_fu_90;
wire   [1:0] select_ln21_2_fu_562_p3;
reg   [9:0] index_4_fu_94;
wire   [9:0] select_ln21_3_fu_406_p3;
reg   [5:0] indvar_flatten23_fu_98;
wire   [5:0] select_ln21_5_fu_437_p3;
reg   [2:0] c_1_fu_102;
wire   [2:0] select_ln20_3_fu_545_p3;
reg   [9:0] indvars_iv566_fu_106;
wire   [9:0] select_ln20_4_fu_364_p3;
reg   [8:0] indvar_flatten39_fu_110;
wire   [8:0] select_ln20_5_fu_451_p3;
reg   [2:0] r_1_fu_114;
wire   [2:0] select_ln19_5_fu_521_p3;
reg   [9:0] indvars_iv564_fu_118;
wire   [9:0] select_ln19_7_fu_310_p3;
reg   [9:0] indvar_flatten68_fu_122;
wire   [9:0] add_ln19_3_fu_217_p2;
wire   [9:0] add_ln19_1_fu_244_p2;
wire   [0:0] icmp_ln22_fu_286_p2;
wire   [0:0] xor_ln19_fu_280_p2;
wire   [0:0] icmp_ln21_fu_298_p2;
wire   [9:0] select_ln19_fu_256_p3;
wire   [9:0] add_ln20_1_fu_318_p2;
wire   [9:0] select_ln19_2_fu_264_p3;
wire   [9:0] select_ln19_4_fu_272_p3;
wire   [0:0] xor_ln20_fu_346_p2;
wire   [0:0] and_ln19_fu_292_p2;
wire   [0:0] or_ln20_1_fu_352_p2;
wire   [9:0] select_ln20_fu_324_p3;
wire   [0:0] or_ln21_1_fu_378_p2;
wire   [0:0] or_ln21_fu_384_p2;
wire   [9:0] add_ln21_1_fu_372_p2;
wire   [9:0] select_ln20_2_fu_338_p3;
wire   [9:0] select_ln21_1_fu_398_p3;
wire   [5:0] add_ln21_2_fu_431_p2;
wire   [8:0] add_ln20_2_fu_445_p2;
wire   [2:0] add_ln19_fu_508_p2;
wire   [2:0] select_ln19_1_fu_514_p3;
wire   [2:0] add_ln20_fu_532_p2;
wire   [1:0] select_ln20_1_fu_538_p3;
wire   [1:0] add_ln21_fu_556_p2;
wire   [5:0] tmp_3_fu_576_p3;
wire   [6:0] zext_ln23_1_fu_583_p1;
wire   [6:0] zext_ln23_fu_573_p1;
wire   [6:0] sub_ln23_fu_587_p2;
wire  signed [7:0] sext_ln23_fu_593_p1;
wire   [7:0] select_ln21_2_cast_fu_569_p1;
wire  signed [7:0] add_ln23_1_fu_597_p2;
wire   [9:0] tmp_fu_607_p3;
wire  signed [61:0] sext_ln23_2_fu_615_p1;
wire  signed [61:0] sext_ln23_1_fu_603_p1;
wire   [61:0] add_ln23_2_fu_619_p2;
wire   [61:0] zext_ln20_fu_528_p1;
wire   [61:0] add_ln23_3_fu_625_p2;
wire   [7:0] trunc_ln23_1_fu_635_p1;
wire   [9:0] p_shl3_cast_fu_639_p3;
wire   [9:0] trunc_ln23_fu_631_p1;
wire   [9:0] add_ln23_4_fu_647_p2;
wire   [9:0] zext_ln21_fu_552_p1;
wire   [9:0] add_ln23_5_fu_653_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

LeNet_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            c_1_fu_102 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            c_1_fu_102 <= select_ln20_3_fu_545_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            index_4_fu_94 <= 10'd78;
        end else if (((icmp_ln19_fu_211_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            index_4_fu_94 <= select_ln21_3_fu_406_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            index_fu_82 <= 10'd78;
        end else if (((icmp_ln19_fu_211_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            index_fu_82 <= add_ln23_fu_419_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten23_fu_98 <= 6'd0;
        end else if (((icmp_ln19_fu_211_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten23_fu_98 <= select_ln21_5_fu_437_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten39_fu_110 <= 9'd0;
        end else if (((icmp_ln19_fu_211_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten39_fu_110 <= select_ln20_5_fu_451_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten68_fu_122 <= 10'd0;
        end else if (((icmp_ln19_fu_211_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten68_fu_122 <= add_ln19_3_fu_217_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvars_iv564_fu_118 <= 10'd78;
        end else if (((icmp_ln19_fu_211_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvars_iv564_fu_118 <= select_ln19_7_fu_310_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvars_iv566_fu_106 <= 10'd78;
        end else if (((icmp_ln19_fu_211_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvars_iv566_fu_106 <= select_ln20_4_fu_364_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_86 <= 4'd0;
        end else if (((icmp_ln19_fu_211_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_fu_86 <= add_ln22_fu_425_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            l_fu_90 <= 2'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            l_fu_90 <= select_ln21_2_fu_562_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            r_1_fu_114 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            r_1_fu_114 <= select_ln19_5_fu_521_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_fu_211_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln19_1_reg_765 <= and_ln19_1_fu_304_p2;
        and_ln20_reg_775 <= and_ln20_fu_358_p2;
        icmp_ln20_reg_759 <= icmp_ln20_fu_250_p2;
        or_ln20_reg_770 <= or_ln20_fu_332_p2;
        select_ln21_reg_780 <= select_ln21_fu_390_p3;
    end
end

always @ (*) begin
    if (((icmp_ln19_fu_211_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_weight_layer3_V_ce0 = 1'b1;
    end else begin
        kernel_weight_layer3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_weight_layer3_V_we0 = 1'b1;
    end else begin
        kernel_weight_layer3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        param_arr_ce0 = 1'b1;
    end else begin
        param_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln19_1_fu_244_p2 = (indvars_iv564_fu_118 + 10'd180);

assign add_ln19_3_fu_217_p2 = (indvar_flatten68_fu_122 + 10'd1);

assign add_ln19_fu_508_p2 = (r_1_fu_114 + 3'd1);

assign add_ln20_1_fu_318_p2 = (select_ln19_fu_256_p3 + 10'd36);

assign add_ln20_2_fu_445_p2 = (indvar_flatten39_fu_110 + 9'd1);

assign add_ln20_fu_532_p2 = (select_ln19_1_fu_514_p3 + 3'd1);

assign add_ln21_1_fu_372_p2 = (select_ln20_fu_324_p3 + 10'd12);

assign add_ln21_2_fu_431_p2 = (indvar_flatten23_fu_98 + 6'd1);

assign add_ln21_fu_556_p2 = (select_ln20_1_fu_538_p3 + 2'd1);

assign add_ln22_fu_425_p2 = (select_ln21_fu_390_p3 + 4'd1);

assign add_ln23_1_fu_597_p2 = ($signed(sext_ln23_fu_593_p1) + $signed(select_ln21_2_cast_fu_569_p1));

assign add_ln23_2_fu_619_p2 = ($signed(sext_ln23_2_fu_615_p1) + $signed(sext_ln23_1_fu_603_p1));

assign add_ln23_3_fu_625_p2 = (add_ln23_2_fu_619_p2 + zext_ln20_fu_528_p1);

assign add_ln23_4_fu_647_p2 = (p_shl3_cast_fu_639_p3 + trunc_ln23_fu_631_p1);

assign add_ln23_5_fu_653_p2 = (add_ln23_4_fu_647_p2 + zext_ln21_fu_552_p1);

assign add_ln23_fu_419_p2 = (select_ln21_1_fu_398_p3 + 10'd1);

assign and_ln19_1_fu_304_p2 = (xor_ln19_fu_280_p2 & icmp_ln21_fu_298_p2);

assign and_ln19_fu_292_p2 = (xor_ln19_fu_280_p2 & icmp_ln22_fu_286_p2);

assign and_ln20_fu_358_p2 = (or_ln20_1_fu_352_p2 & and_ln19_fu_292_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln19_fu_211_p2 = ((indvar_flatten68_fu_122 == 10'd900) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_250_p2 = ((indvar_flatten39_fu_110 == 9'd180) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_298_p2 = ((indvar_flatten23_fu_98 == 6'd36) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_286_p2 = ((k_fu_86 == 4'd12) ? 1'b1 : 1'b0);

assign index_7_cast_fu_414_p1 = select_ln21_1_fu_398_p3;

assign kernel_weight_layer3_V_address0 = zext_ln23_2_fu_659_p1;

assign kernel_weight_layer3_V_d0 = param_arr_q0;

assign or_ln20_1_fu_352_p2 = (xor_ln20_fu_346_p2 | icmp_ln20_fu_250_p2);

assign or_ln20_fu_332_p2 = (icmp_ln20_fu_250_p2 | and_ln19_1_fu_304_p2);

assign or_ln21_1_fu_378_p2 = (and_ln20_fu_358_p2 | and_ln19_1_fu_304_p2);

assign or_ln21_fu_384_p2 = (or_ln21_1_fu_378_p2 | icmp_ln20_fu_250_p2);

assign p_shl3_cast_fu_639_p3 = {{trunc_ln23_1_fu_635_p1}, {2'd0}};

assign param_arr_address0 = index_7_cast_fu_414_p1;

assign select_ln19_1_fu_514_p3 = ((icmp_ln20_reg_759[0:0] == 1'b1) ? 3'd0 : c_1_fu_102);

assign select_ln19_2_fu_264_p3 = ((icmp_ln20_fu_250_p2[0:0] == 1'b1) ? add_ln19_1_fu_244_p2 : index_4_fu_94);

assign select_ln19_4_fu_272_p3 = ((icmp_ln20_fu_250_p2[0:0] == 1'b1) ? add_ln19_1_fu_244_p2 : index_fu_82);

assign select_ln19_5_fu_521_p3 = ((icmp_ln20_reg_759[0:0] == 1'b1) ? add_ln19_fu_508_p2 : r_1_fu_114);

assign select_ln19_7_fu_310_p3 = ((icmp_ln20_fu_250_p2[0:0] == 1'b1) ? add_ln19_1_fu_244_p2 : indvars_iv564_fu_118);

assign select_ln19_fu_256_p3 = ((icmp_ln20_fu_250_p2[0:0] == 1'b1) ? add_ln19_1_fu_244_p2 : indvars_iv566_fu_106);

assign select_ln20_1_fu_538_p3 = ((or_ln20_reg_770[0:0] == 1'b1) ? 2'd0 : l_fu_90);

assign select_ln20_2_fu_338_p3 = ((and_ln19_1_fu_304_p2[0:0] == 1'b1) ? add_ln20_1_fu_318_p2 : select_ln19_4_fu_272_p3);

assign select_ln20_3_fu_545_p3 = ((and_ln19_1_reg_765[0:0] == 1'b1) ? add_ln20_fu_532_p2 : select_ln19_1_fu_514_p3);

assign select_ln20_4_fu_364_p3 = ((and_ln19_1_fu_304_p2[0:0] == 1'b1) ? add_ln20_1_fu_318_p2 : select_ln19_fu_256_p3);

assign select_ln20_5_fu_451_p3 = ((icmp_ln20_fu_250_p2[0:0] == 1'b1) ? 9'd1 : add_ln20_2_fu_445_p2);

assign select_ln20_fu_324_p3 = ((and_ln19_1_fu_304_p2[0:0] == 1'b1) ? add_ln20_1_fu_318_p2 : select_ln19_2_fu_264_p3);

assign select_ln21_1_fu_398_p3 = ((and_ln20_fu_358_p2[0:0] == 1'b1) ? add_ln21_1_fu_372_p2 : select_ln20_2_fu_338_p3);

assign select_ln21_2_cast_fu_569_p1 = select_ln21_2_fu_562_p3;

assign select_ln21_2_fu_562_p3 = ((and_ln20_reg_775[0:0] == 1'b1) ? add_ln21_fu_556_p2 : select_ln20_1_fu_538_p3);

assign select_ln21_3_fu_406_p3 = ((and_ln20_fu_358_p2[0:0] == 1'b1) ? add_ln21_1_fu_372_p2 : select_ln20_fu_324_p3);

assign select_ln21_5_fu_437_p3 = ((or_ln20_fu_332_p2[0:0] == 1'b1) ? 6'd1 : add_ln21_2_fu_431_p2);

assign select_ln21_fu_390_p3 = ((or_ln21_fu_384_p2[0:0] == 1'b1) ? 4'd0 : k_fu_86);

assign sext_ln23_1_fu_603_p1 = add_ln23_1_fu_597_p2;

assign sext_ln23_2_fu_615_p1 = $signed(tmp_fu_607_p3);

assign sext_ln23_fu_593_p1 = $signed(sub_ln23_fu_587_p2);

assign sub_ln23_fu_587_p2 = (zext_ln23_1_fu_583_p1 - zext_ln23_fu_573_p1);

assign tmp_3_fu_576_p3 = {{select_ln21_reg_780}, {2'd0}};

assign tmp_fu_607_p3 = {{add_ln23_1_fu_597_p2}, {2'd0}};

assign trunc_ln23_1_fu_635_p1 = add_ln23_3_fu_625_p2[7:0];

assign trunc_ln23_fu_631_p1 = add_ln23_3_fu_625_p2[9:0];

assign xor_ln19_fu_280_p2 = (icmp_ln20_fu_250_p2 ^ 1'd1);

assign xor_ln20_fu_346_p2 = (icmp_ln21_fu_298_p2 ^ 1'd1);

assign zext_ln20_fu_528_p1 = select_ln19_5_fu_521_p3;

assign zext_ln21_fu_552_p1 = select_ln20_3_fu_545_p3;

assign zext_ln23_1_fu_583_p1 = tmp_3_fu_576_p3;

assign zext_ln23_2_fu_659_p1 = add_ln23_5_fu_653_p2;

assign zext_ln23_fu_573_p1 = select_ln21_reg_780;

endmodule //LeNet_LeNet_Pipeline_VITIS_LOOP_19_5_VITIS_LOOP_21_7_VITIS_LOOP_22_8
