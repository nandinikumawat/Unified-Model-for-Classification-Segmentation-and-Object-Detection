// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LeNet_LeNet_Pipeline_kernel_row_loop_row_loop_column_loop_output_channel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        layer2_output_V_address0,
        layer2_output_V_ce0,
        layer2_output_V_q0,
        layer2_output_V_address1,
        layer2_output_V_ce1,
        layer2_output_V_q1,
        layer2_output_V_address2,
        layer2_output_V_ce2,
        layer2_output_V_q2,
        kernel_weight_layer3_V_address0,
        kernel_weight_layer3_V_ce0,
        kernel_weight_layer3_V_q0,
        kernel_weight_layer3_V_address1,
        kernel_weight_layer3_V_ce1,
        kernel_weight_layer3_V_q1,
        kernel_weight_layer3_V_address2,
        kernel_weight_layer3_V_ce2,
        kernel_weight_layer3_V_q2,
        layer3_output_V_address0,
        layer3_output_V_ce0,
        layer3_output_V_we0,
        layer3_output_V_d0,
        layer3_output_V_address1,
        layer3_output_V_ce1,
        layer3_output_V_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] layer2_output_V_address0;
output   layer2_output_V_ce0;
input  [15:0] layer2_output_V_q0;
output  [8:0] layer2_output_V_address1;
output   layer2_output_V_ce1;
input  [15:0] layer2_output_V_q1;
output  [8:0] layer2_output_V_address2;
output   layer2_output_V_ce2;
input  [15:0] layer2_output_V_q2;
output  [9:0] kernel_weight_layer3_V_address0;
output   kernel_weight_layer3_V_ce0;
input  [15:0] kernel_weight_layer3_V_q0;
output  [9:0] kernel_weight_layer3_V_address1;
output   kernel_weight_layer3_V_ce1;
input  [15:0] kernel_weight_layer3_V_q1;
output  [9:0] kernel_weight_layer3_V_address2;
output   kernel_weight_layer3_V_ce2;
input  [15:0] kernel_weight_layer3_V_q2;
output  [9:0] layer3_output_V_address0;
output   layer3_output_V_ce0;
output   layer3_output_V_we0;
output  [15:0] layer3_output_V_d0;
output  [9:0] layer3_output_V_address1;
output   layer3_output_V_ce1;
input  [15:0] layer3_output_V_q1;

reg ap_idle;
reg layer2_output_V_ce0;
reg layer2_output_V_ce1;
reg layer2_output_V_ce2;
reg kernel_weight_layer3_V_ce0;
reg kernel_weight_layer3_V_ce1;
reg kernel_weight_layer3_V_ce2;
reg layer3_output_V_ce0;
reg layer3_output_V_we0;
reg layer3_output_V_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln15_fu_297_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] kc_1_reg_1521;
reg   [2:0] kr_1_reg_1526;
reg   [0:0] icmp_ln15_reg_1531;
wire   [2:0] add_ln15_1_fu_321_p2;
reg   [2:0] add_ln15_1_reg_1535;
wire   [0:0] icmp_ln17_fu_327_p2;
reg   [0:0] icmp_ln17_reg_1544;
wire   [2:0] select_ln15_1_fu_341_p3;
reg   [2:0] select_ln15_1_reg_1552;
wire   [0:0] and_ln15_2_fu_389_p2;
reg   [0:0] and_ln15_2_reg_1561;
wire   [2:0] add_ln17_fu_395_p2;
reg   [2:0] add_ln17_reg_1569;
wire   [0:0] or_ln17_fu_401_p2;
reg   [0:0] or_ln17_reg_1574;
wire   [2:0] select_ln17_1_fu_407_p3;
reg   [2:0] select_ln17_1_reg_1579;
wire   [0:0] and_ln17_1_fu_437_p2;
reg   [0:0] and_ln17_1_reg_1585;
wire   [0:0] or_ln19_1_fu_449_p2;
reg   [0:0] or_ln19_1_reg_1594;
wire   [0:0] and_ln19_fu_461_p2;
reg   [0:0] and_ln19_reg_1599;
wire   [3:0] select_ln21_fu_479_p3;
reg   [3:0] select_ln21_reg_1607;
wire   [9:0] empty_159_fu_1261_p2;
reg   [9:0] empty_159_reg_1642;
reg   [9:0] empty_159_reg_1642_pp0_iter3_reg;
reg   [9:0] empty_159_reg_1642_pp0_iter4_reg;
reg  signed [15:0] kernel_weight_layer3_V_load_reg_1647;
reg  signed [15:0] kernel_weight_layer3_V_load_1_reg_1652;
reg  signed [15:0] kernel_weight_layer3_V_load_2_reg_1657;
reg   [9:0] layer3_output_V_addr_reg_1692;
reg   [9:0] layer3_output_V_addr_reg_1692_pp0_iter6_reg;
wire   [15:0] add_ln415_2_fu_1428_p2;
reg   [15:0] add_ln415_2_reg_1698;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [63:0] zext_ln1171_2_fu_537_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1171_3_fu_572_p1;
wire   [63:0] zext_ln1171_4_fu_607_p1;
wire   [63:0] zext_ln1169_14_fu_1211_p1;
wire   [63:0] zext_ln1169_15_fu_1223_p1;
wire   [63:0] zext_ln1169_16_fu_1235_p1;
wire   [63:0] p_cast4_fu_1298_p1;
reg   [3:0] k_out_fu_116;
wire   [3:0] add_ln23_fu_612_p2;
wire    ap_loop_init;
reg   [3:0] c_fu_120;
wire   [3:0] select_ln21_1_fu_1165_p3;
reg   [7:0] indvar_flatten385_fu_124;
wire   [7:0] select_ln21_5_fu_624_p3;
reg   [3:0] r_fu_128;
wire   [3:0] select_ln19_1_fu_1009_p3;
reg   [10:0] indvar_flatten424_fu_132;
wire   [10:0] select_ln19_6_fu_638_p3;
reg   [2:0] kc_fu_136;
reg   [12:0] indvar_flatten474_fu_140;
wire   [12:0] select_ln17_6_fu_652_p3;
reg   [2:0] kr_fu_144;
reg   [14:0] indvar_flatten536_fu_148;
wire   [14:0] add_ln15_fu_303_p2;
wire   [0:0] icmp_ln23_fu_359_p2;
wire   [0:0] xor_ln15_fu_353_p2;
wire   [0:0] icmp_ln21_fu_371_p2;
wire   [0:0] icmp_ln19_fu_383_p2;
wire   [2:0] select_ln15_fu_333_p3;
wire   [0:0] xor_ln17_fu_419_p2;
wire   [0:0] and_ln15_fu_365_p2;
wire   [0:0] or_ln17_1_fu_425_p2;
wire   [0:0] and_ln15_1_fu_377_p2;
wire   [0:0] or_ln19_fu_443_p2;
wire   [0:0] and_ln17_fu_431_p2;
wire   [0:0] xor_ln19_fu_455_p2;
wire   [0:0] or_ln21_fu_467_p2;
wire   [0:0] or_ln21_1_fu_473_p2;
wire   [7:0] tmp_6_fu_491_p3;
wire   [8:0] zext_ln1171_1_fu_499_p1;
wire   [8:0] zext_ln1171_fu_487_p1;
wire   [8:0] sub_ln1171_fu_503_p2;
wire  signed [9:0] sext_ln1171_3_fu_509_p1;
wire   [9:0] zext_ln15_1_fu_349_p1;
wire   [9:0] add_ln1171_fu_513_p2;
wire   [9:0] shl_ln1171_fu_519_p2;
wire   [9:0] add_ln1171_1_fu_525_p2;
wire   [9:0] zext_ln17_2_fu_415_p1;
wire   [9:0] add_ln1171_2_fu_531_p2;
wire   [9:0] add_ln1171_3_fu_542_p2;
wire   [9:0] add_ln1171_4_fu_548_p2;
wire   [9:0] shl_ln1171_1_fu_554_p2;
wire   [9:0] add_ln1171_5_fu_560_p2;
wire   [9:0] add_ln1171_6_fu_566_p2;
wire   [9:0] add_ln1171_7_fu_577_p2;
wire   [9:0] add_ln1171_8_fu_583_p2;
wire   [9:0] shl_ln1171_2_fu_589_p2;
wire   [9:0] add_ln1171_9_fu_595_p2;
wire   [9:0] add_ln1171_10_fu_601_p2;
wire   [7:0] add_ln21_1_fu_618_p2;
wire   [10:0] add_ln19_1_fu_632_p2;
wire   [12:0] add_ln17_1_fu_646_p2;
wire   [3:0] zext_ln15_fu_701_p1;
wire   [3:0] empty_fu_707_p2;
wire   [7:0] tmp_s_fu_713_p3;
wire   [5:0] tmp_1_fu_725_p3;
wire   [8:0] zext_ln1169_fu_721_p1;
wire   [8:0] zext_ln1169_1_fu_733_p1;
wire   [8:0] sub_ln1169_fu_737_p2;
wire   [3:0] zext_ln17_fu_704_p1;
wire   [3:0] empty_156_fu_755_p2;
wire   [8:0] zext_ln1169_2_fu_761_p1;
wire   [8:0] add_ln1169_fu_743_p2;
wire   [8:0] add_ln1169_1_fu_749_p2;
wire   [6:0] tmp_2_fu_789_p3;
wire   [4:0] tmp_3_fu_800_p3;
wire   [7:0] zext_ln1169_4_fu_796_p1;
wire   [7:0] zext_ln1169_5_fu_807_p1;
wire   [7:0] sub_ln1169_1_fu_811_p2;
wire  signed [8:0] sext_ln1169_fu_817_p1;
wire   [8:0] p_shl20_cast_fu_827_p4;
wire   [8:0] p_shl21_cast_fu_836_p4;
wire   [3:0] zext_ln1169_3_fu_786_p1;
wire   [8:0] add_ln1169_2_fu_765_p2;
wire   [8:0] add_ln1169_5_fu_821_p2;
wire   [8:0] add_ln1169_3_fu_771_p2;
wire   [8:0] sub_ln1169_2_fu_845_p2;
wire   [8:0] add_ln1169_4_fu_777_p2;
wire   [6:0] tmp_fu_892_p3;
wire   [4:0] tmp_9_fu_903_p3;
wire   [8:0] zext_ln1169_6_fu_899_p1;
wire   [8:0] zext_ln1169_7_fu_910_p1;
wire   [8:0] sub_ln1169_3_fu_914_p2;
wire   [8:0] p_shl22_cast_fu_926_p4;
wire   [8:0] p_shl23_cast_fu_935_p4;
wire   [3:0] zext_ln15_2_fu_783_p1;
wire   [3:0] select_ln15_2_fu_851_p3;
wire   [8:0] zext_ln17_1_fu_886_p1;
wire   [8:0] add_ln1169_6_fu_920_p2;
wire   [8:0] sub_ln1169_4_fu_944_p2;
wire   [8:0] add_ln1169_7_fu_957_p2;
wire   [8:0] select_ln15_3_fu_858_p3;
wire   [8:0] add_ln1169_8_fu_963_p2;
wire   [8:0] select_ln15_4_fu_865_p3;
wire   [8:0] add_ln1169_9_fu_969_p2;
wire   [8:0] select_ln15_5_fu_872_p3;
wire   [3:0] select_ln17_fu_879_p3;
wire   [3:0] add_ln19_fu_996_p2;
wire   [3:0] p_mid1402_fu_1020_p2;
wire   [7:0] tmp_4_fu_1026_p3;
wire   [5:0] tmp_5_fu_1038_p3;
wire   [8:0] zext_ln1169_8_fu_1034_p1;
wire   [8:0] zext_ln1169_9_fu_1046_p1;
wire   [8:0] sub_ln1169_5_fu_1050_p2;
wire   [3:0] select_ln17_2_fu_950_p3;
wire   [3:0] select_ln19_2_fu_1068_p3;
wire   [7:0] tmp_10_fu_1075_p3;
wire   [5:0] tmp_11_fu_1087_p3;
wire   [8:0] zext_ln1169_10_fu_1083_p1;
wire   [8:0] zext_ln1169_11_fu_1095_p1;
wire   [8:0] sub_ln1169_6_fu_1099_p2;
wire   [8:0] zext_ln1169_12_fu_1117_p1;
wire   [8:0] add_ln1169_10_fu_1056_p2;
wire   [8:0] add_ln1169_11_fu_1062_p2;
wire   [8:0] add_ln1169_14_fu_1120_p2;
wire   [8:0] select_ln17_3_fu_975_p3;
wire   [8:0] add_ln1169_15_fu_1126_p2;
wire   [8:0] select_ln17_4_fu_982_p3;
wire   [8:0] add_ln1169_16_fu_1132_p2;
wire   [8:0] select_ln17_5_fu_989_p3;
wire   [3:0] select_ln19_fu_1002_p3;
wire   [3:0] add_ln21_fu_1159_p2;
wire   [3:0] zext_ln17_3_fu_889_p1;
wire   [3:0] p_mid1383_fu_1176_p2;
wire   [8:0] zext_ln1169_13_fu_1182_p1;
wire   [8:0] add_ln1169_12_fu_1105_p2;
wire   [8:0] add_ln1169_13_fu_1111_p2;
wire   [8:0] add_ln1169_17_fu_1186_p2;
wire   [8:0] select_ln19_3_fu_1138_p3;
wire   [8:0] select_ln21_2_fu_1204_p3;
wire   [8:0] add_ln1169_18_fu_1192_p2;
wire   [8:0] select_ln19_4_fu_1145_p3;
wire   [8:0] select_ln21_3_fu_1216_p3;
wire   [8:0] add_ln1169_19_fu_1198_p2;
wire   [8:0] select_ln19_5_fu_1152_p3;
wire   [8:0] select_ln21_4_fu_1228_p3;
wire   [6:0] tmp_7_fu_1240_p3;
wire   [6:0] select_ln19_14_cast_fu_1016_p1;
wire   [6:0] empty_158_fu_1247_p2;
wire   [9:0] tmp_56_cast_fu_1253_p3;
wire   [9:0] select_ln21_7_cast_fu_1172_p1;
wire  signed [31:0] grp_fu_1434_p2;
wire   [25:0] shl_ln737_s_fu_1302_p3;
wire   [25:0] trunc_ln1245_fu_1310_p1;
wire   [25:0] add_ln1245_fu_1313_p2;
wire   [0:0] tmp_12_fu_1329_p3;
wire   [15:0] zext_ln415_fu_1336_p1;
wire   [15:0] trunc_ln717_s_fu_1319_p4;
wire   [15:0] add_ln415_fu_1340_p2;
wire  signed [31:0] grp_fu_1442_p2;
wire   [25:0] shl_ln737_1_fu_1346_p3;
wire   [25:0] trunc_ln1245_1_fu_1354_p1;
wire   [25:0] add_ln1245_1_fu_1357_p2;
wire   [0:0] tmp_13_fu_1373_p3;
wire   [15:0] zext_ln415_1_fu_1380_p1;
wire   [15:0] trunc_ln717_1_fu_1363_p4;
wire   [15:0] add_ln415_1_fu_1384_p2;
wire  signed [31:0] grp_fu_1450_p2;
wire   [25:0] shl_ln737_2_fu_1390_p3;
wire   [25:0] trunc_ln1245_2_fu_1398_p1;
wire   [25:0] add_ln1245_2_fu_1401_p2;
wire   [0:0] tmp_14_fu_1417_p3;
wire   [15:0] zext_ln415_2_fu_1424_p1;
wire   [15:0] trunc_ln717_2_fu_1407_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

LeNet_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kernel_weight_layer3_V_load_reg_1647),
    .din1(layer2_output_V_q2),
    .ce(1'b1),
    .dout(grp_fu_1434_p2)
);

LeNet_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kernel_weight_layer3_V_load_1_reg_1652),
    .din1(layer2_output_V_q1),
    .ce(1'b1),
    .dout(grp_fu_1442_p2)
);

LeNet_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kernel_weight_layer3_V_load_2_reg_1657),
    .din1(layer2_output_V_q0),
    .ce(1'b1),
    .dout(grp_fu_1450_p2)
);

LeNet_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c_fu_120 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln15_reg_1531 == 1'd0))) begin
            c_fu_120 <= select_ln21_1_fu_1165_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten385_fu_124 <= 8'd0;
        end else if (((icmp_ln15_fu_297_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten385_fu_124 <= select_ln21_5_fu_624_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten424_fu_132 <= 11'd0;
        end else if (((icmp_ln15_fu_297_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten424_fu_132 <= select_ln19_6_fu_638_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten474_fu_140 <= 13'd0;
        end else if (((icmp_ln15_fu_297_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten474_fu_140 <= select_ln17_6_fu_652_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten536_fu_148 <= 15'd0;
        end else if (((icmp_ln15_fu_297_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten536_fu_148 <= add_ln15_fu_303_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_out_fu_116 <= 4'd0;
        end else if (((icmp_ln15_fu_297_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_out_fu_116 <= add_ln23_fu_612_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            kc_fu_136 <= 3'd0;
        end else if (((icmp_ln15_fu_297_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            kc_fu_136 <= select_ln17_1_fu_407_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            kr_fu_144 <= 3'd0;
        end else if (((icmp_ln15_fu_297_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            kr_fu_144 <= select_ln15_1_fu_341_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            r_fu_128 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln15_reg_1531 == 1'd0))) begin
            r_fu_128 <= select_ln19_1_fu_1009_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_fu_297_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln15_1_reg_1535 <= add_ln15_1_fu_321_p2;
        add_ln17_reg_1569 <= add_ln17_fu_395_p2;
        and_ln15_2_reg_1561 <= and_ln15_2_fu_389_p2;
        and_ln17_1_reg_1585 <= and_ln17_1_fu_437_p2;
        and_ln19_reg_1599 <= and_ln19_fu_461_p2;
        icmp_ln17_reg_1544 <= icmp_ln17_fu_327_p2;
        or_ln17_reg_1574 <= or_ln17_fu_401_p2;
        or_ln19_1_reg_1594 <= or_ln19_1_fu_449_p2;
        select_ln15_1_reg_1552 <= select_ln15_1_fu_341_p3;
        select_ln17_1_reg_1579 <= select_ln17_1_fu_407_p3;
        select_ln21_reg_1607 <= select_ln21_fu_479_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln415_2_reg_1698 <= add_ln415_2_fu_1428_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        empty_159_reg_1642_pp0_iter3_reg <= empty_159_reg_1642;
        empty_159_reg_1642_pp0_iter4_reg <= empty_159_reg_1642_pp0_iter3_reg;
        layer3_output_V_addr_reg_1692 <= p_cast4_fu_1298_p1;
        layer3_output_V_addr_reg_1692_pp0_iter6_reg <= layer3_output_V_addr_reg_1692;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln15_reg_1531 <= icmp_ln15_fu_297_p2;
        kc_1_reg_1521 <= kc_fu_136;
        kr_1_reg_1526 <= kr_fu_144;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln15_reg_1531 == 1'd0))) begin
        empty_159_reg_1642 <= empty_159_fu_1261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln15_reg_1531 == 1'd0))) begin
        kernel_weight_layer3_V_load_1_reg_1652 <= kernel_weight_layer3_V_q1;
        kernel_weight_layer3_V_load_2_reg_1657 <= kernel_weight_layer3_V_q0;
        kernel_weight_layer3_V_load_reg_1647 <= kernel_weight_layer3_V_q2;
    end
end

always @ (*) begin
    if (((icmp_ln15_fu_297_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln15_reg_1531 == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_layer3_V_ce0 = 1'b1;
    end else begin
        kernel_weight_layer3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_layer3_V_ce1 = 1'b1;
    end else begin
        kernel_weight_layer3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_weight_layer3_V_ce2 = 1'b1;
    end else begin
        kernel_weight_layer3_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer2_output_V_ce0 = 1'b1;
    end else begin
        layer2_output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer2_output_V_ce1 = 1'b1;
    end else begin
        layer2_output_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer2_output_V_ce2 = 1'b1;
    end else begin
        layer2_output_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        layer3_output_V_ce0 = 1'b1;
    end else begin
        layer3_output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        layer3_output_V_ce1 = 1'b1;
    end else begin
        layer3_output_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        layer3_output_V_we0 = 1'b1;
    end else begin
        layer3_output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1169_10_fu_1056_p2 = (sub_ln1169_5_fu_1050_p2 + 9'd144);

assign add_ln1169_11_fu_1062_p2 = ($signed(sub_ln1169_5_fu_1050_p2) + $signed(9'd288));

assign add_ln1169_12_fu_1105_p2 = (sub_ln1169_6_fu_1099_p2 + 9'd144);

assign add_ln1169_13_fu_1111_p2 = ($signed(sub_ln1169_6_fu_1099_p2) + $signed(9'd288));

assign add_ln1169_14_fu_1120_p2 = (sub_ln1169_5_fu_1050_p2 + zext_ln1169_12_fu_1117_p1);

assign add_ln1169_15_fu_1126_p2 = (add_ln1169_10_fu_1056_p2 + zext_ln1169_12_fu_1117_p1);

assign add_ln1169_16_fu_1132_p2 = (add_ln1169_11_fu_1062_p2 + zext_ln1169_12_fu_1117_p1);

assign add_ln1169_17_fu_1186_p2 = (sub_ln1169_6_fu_1099_p2 + zext_ln1169_13_fu_1182_p1);

assign add_ln1169_18_fu_1192_p2 = (add_ln1169_12_fu_1105_p2 + zext_ln1169_13_fu_1182_p1);

assign add_ln1169_19_fu_1198_p2 = (add_ln1169_13_fu_1111_p2 + zext_ln1169_13_fu_1182_p1);

assign add_ln1169_1_fu_749_p2 = ($signed(sub_ln1169_fu_737_p2) + $signed(9'd288));

assign add_ln1169_2_fu_765_p2 = (sub_ln1169_fu_737_p2 + zext_ln1169_2_fu_761_p1);

assign add_ln1169_3_fu_771_p2 = (add_ln1169_fu_743_p2 + zext_ln1169_2_fu_761_p1);

assign add_ln1169_4_fu_777_p2 = (add_ln1169_1_fu_749_p2 + zext_ln1169_2_fu_761_p1);

assign add_ln1169_5_fu_821_p2 = ($signed(sext_ln1169_fu_817_p1) + $signed(9'd144));

assign add_ln1169_6_fu_920_p2 = (sub_ln1169_3_fu_914_p2 + 9'd144);

assign add_ln1169_7_fu_957_p2 = (sub_ln1169_3_fu_914_p2 + zext_ln17_1_fu_886_p1);

assign add_ln1169_8_fu_963_p2 = (add_ln1169_6_fu_920_p2 + zext_ln17_1_fu_886_p1);

assign add_ln1169_9_fu_969_p2 = (sub_ln1169_4_fu_944_p2 + zext_ln17_1_fu_886_p1);

assign add_ln1169_fu_743_p2 = (sub_ln1169_fu_737_p2 + 9'd144);

assign add_ln1171_10_fu_601_p2 = (add_ln1171_9_fu_595_p2 + zext_ln17_2_fu_415_p1);

assign add_ln1171_1_fu_525_p2 = (shl_ln1171_fu_519_p2 + add_ln1171_fu_513_p2);

assign add_ln1171_2_fu_531_p2 = (add_ln1171_1_fu_525_p2 + zext_ln17_2_fu_415_p1);

assign add_ln1171_3_fu_542_p2 = ($signed(sext_ln1171_3_fu_509_p1) + $signed(10'd5));

assign add_ln1171_4_fu_548_p2 = (add_ln1171_3_fu_542_p2 + zext_ln15_1_fu_349_p1);

assign add_ln1171_5_fu_560_p2 = (shl_ln1171_1_fu_554_p2 + add_ln1171_4_fu_548_p2);

assign add_ln1171_6_fu_566_p2 = (add_ln1171_5_fu_560_p2 + zext_ln17_2_fu_415_p1);

assign add_ln1171_7_fu_577_p2 = ($signed(sext_ln1171_3_fu_509_p1) + $signed(10'd10));

assign add_ln1171_8_fu_583_p2 = (add_ln1171_7_fu_577_p2 + zext_ln15_1_fu_349_p1);

assign add_ln1171_9_fu_595_p2 = (shl_ln1171_2_fu_589_p2 + add_ln1171_8_fu_583_p2);

assign add_ln1171_fu_513_p2 = ($signed(sext_ln1171_3_fu_509_p1) + $signed(zext_ln15_1_fu_349_p1));

assign add_ln1245_1_fu_1357_p2 = (shl_ln737_1_fu_1346_p3 + trunc_ln1245_1_fu_1354_p1);

assign add_ln1245_2_fu_1401_p2 = (shl_ln737_2_fu_1390_p3 + trunc_ln1245_2_fu_1398_p1);

assign add_ln1245_fu_1313_p2 = (shl_ln737_s_fu_1302_p3 + trunc_ln1245_fu_1310_p1);

assign add_ln15_1_fu_321_p2 = (kr_fu_144 + 3'd1);

assign add_ln15_fu_303_p2 = (indvar_flatten536_fu_148 + 15'd1);

assign add_ln17_1_fu_646_p2 = (indvar_flatten474_fu_140 + 13'd1);

assign add_ln17_fu_395_p2 = (select_ln15_fu_333_p3 + 3'd1);

assign add_ln19_1_fu_632_p2 = (indvar_flatten424_fu_132 + 11'd1);

assign add_ln19_fu_996_p2 = (select_ln17_fu_879_p3 + 4'd1);

assign add_ln21_1_fu_618_p2 = (indvar_flatten385_fu_124 + 8'd1);

assign add_ln21_fu_1159_p2 = (select_ln19_fu_1002_p3 + 4'd1);

assign add_ln23_fu_612_p2 = (select_ln21_fu_479_p3 + 4'd1);

assign add_ln415_1_fu_1384_p2 = (zext_ln415_1_fu_1380_p1 + trunc_ln717_1_fu_1363_p4);

assign add_ln415_2_fu_1428_p2 = (zext_ln415_2_fu_1424_p1 + trunc_ln717_2_fu_1407_p4);

assign add_ln415_fu_1340_p2 = (zext_ln415_fu_1336_p1 + trunc_ln717_s_fu_1319_p4);

assign and_ln15_1_fu_377_p2 = (xor_ln15_fu_353_p2 & icmp_ln21_fu_371_p2);

assign and_ln15_2_fu_389_p2 = (xor_ln15_fu_353_p2 & icmp_ln19_fu_383_p2);

assign and_ln15_fu_365_p2 = (xor_ln15_fu_353_p2 & icmp_ln23_fu_359_p2);

assign and_ln17_1_fu_437_p2 = (or_ln17_1_fu_425_p2 & and_ln15_1_fu_377_p2);

assign and_ln17_fu_431_p2 = (or_ln17_1_fu_425_p2 & and_ln15_fu_365_p2);

assign and_ln19_fu_461_p2 = (xor_ln19_fu_455_p2 & and_ln17_fu_431_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign empty_156_fu_755_p2 = (c_fu_120 + zext_ln17_fu_704_p1);

assign empty_158_fu_1247_p2 = (tmp_7_fu_1240_p3 + select_ln19_14_cast_fu_1016_p1);

assign empty_159_fu_1261_p2 = (tmp_56_cast_fu_1253_p3 + select_ln21_7_cast_fu_1172_p1);

assign empty_fu_707_p2 = (r_fu_128 + zext_ln15_fu_701_p1);

assign icmp_ln15_fu_297_p2 = ((indvar_flatten536_fu_148 == 15'd19200) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_327_p2 = ((indvar_flatten474_fu_140 == 13'd3840) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_383_p2 = ((indvar_flatten424_fu_132 == 11'd768) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_371_p2 = ((indvar_flatten385_fu_124 == 8'd96) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_359_p2 = ((k_out_fu_116 == 4'd12) ? 1'b1 : 1'b0);

assign kernel_weight_layer3_V_address0 = zext_ln1171_4_fu_607_p1;

assign kernel_weight_layer3_V_address1 = zext_ln1171_3_fu_572_p1;

assign kernel_weight_layer3_V_address2 = zext_ln1171_2_fu_537_p1;

assign layer2_output_V_address0 = zext_ln1169_16_fu_1235_p1;

assign layer2_output_V_address1 = zext_ln1169_15_fu_1223_p1;

assign layer2_output_V_address2 = zext_ln1169_14_fu_1211_p1;

assign layer3_output_V_address0 = layer3_output_V_addr_reg_1692_pp0_iter6_reg;

assign layer3_output_V_address1 = p_cast4_fu_1298_p1;

assign layer3_output_V_d0 = add_ln415_2_reg_1698;

assign or_ln17_1_fu_425_p2 = (xor_ln17_fu_419_p2 | icmp_ln17_fu_327_p2);

assign or_ln17_fu_401_p2 = (icmp_ln17_fu_327_p2 | and_ln15_2_fu_389_p2);

assign or_ln19_1_fu_449_p2 = (or_ln19_fu_443_p2 | icmp_ln17_fu_327_p2);

assign or_ln19_fu_443_p2 = (and_ln17_1_fu_437_p2 | and_ln15_2_fu_389_p2);

assign or_ln21_1_fu_473_p2 = (or_ln21_fu_467_p2 | or_ln17_fu_401_p2);

assign or_ln21_fu_467_p2 = (and_ln19_fu_461_p2 | and_ln17_1_fu_437_p2);

assign p_cast4_fu_1298_p1 = empty_159_reg_1642_pp0_iter4_reg;

assign p_mid1383_fu_1176_p2 = (add_ln21_fu_1159_p2 + zext_ln17_3_fu_889_p1);

assign p_mid1402_fu_1020_p2 = (add_ln19_fu_996_p2 + zext_ln15_2_fu_783_p1);

assign p_shl20_cast_fu_827_p4 = {{{{2'd3}, {add_ln15_1_reg_1535}}}, {4'd0}};

assign p_shl21_cast_fu_836_p4 = {{{{4'd3}, {add_ln15_1_reg_1535}}}, {2'd0}};

assign p_shl22_cast_fu_926_p4 = {{{{2'd3}, {select_ln15_1_reg_1552}}}, {4'd0}};

assign p_shl23_cast_fu_935_p4 = {{{{4'd3}, {select_ln15_1_reg_1552}}}, {2'd0}};

assign select_ln15_1_fu_341_p3 = ((icmp_ln17_fu_327_p2[0:0] == 1'b1) ? add_ln15_1_fu_321_p2 : kr_fu_144);

assign select_ln15_2_fu_851_p3 = ((icmp_ln17_reg_1544[0:0] == 1'b1) ? zext_ln1169_3_fu_786_p1 : empty_fu_707_p2);

assign select_ln15_3_fu_858_p3 = ((icmp_ln17_reg_1544[0:0] == 1'b1) ? sext_ln1169_fu_817_p1 : add_ln1169_2_fu_765_p2);

assign select_ln15_4_fu_865_p3 = ((icmp_ln17_reg_1544[0:0] == 1'b1) ? add_ln1169_5_fu_821_p2 : add_ln1169_3_fu_771_p2);

assign select_ln15_5_fu_872_p3 = ((icmp_ln17_reg_1544[0:0] == 1'b1) ? sub_ln1169_2_fu_845_p2 : add_ln1169_4_fu_777_p2);

assign select_ln15_fu_333_p3 = ((icmp_ln17_fu_327_p2[0:0] == 1'b1) ? 3'd0 : kc_fu_136);

assign select_ln17_1_fu_407_p3 = ((and_ln15_2_fu_389_p2[0:0] == 1'b1) ? add_ln17_fu_395_p2 : select_ln15_fu_333_p3);

assign select_ln17_2_fu_950_p3 = ((and_ln15_2_reg_1561[0:0] == 1'b1) ? zext_ln15_2_fu_783_p1 : select_ln15_2_fu_851_p3);

assign select_ln17_3_fu_975_p3 = ((and_ln15_2_reg_1561[0:0] == 1'b1) ? add_ln1169_7_fu_957_p2 : select_ln15_3_fu_858_p3);

assign select_ln17_4_fu_982_p3 = ((and_ln15_2_reg_1561[0:0] == 1'b1) ? add_ln1169_8_fu_963_p2 : select_ln15_4_fu_865_p3);

assign select_ln17_5_fu_989_p3 = ((and_ln15_2_reg_1561[0:0] == 1'b1) ? add_ln1169_9_fu_969_p2 : select_ln15_5_fu_872_p3);

assign select_ln17_6_fu_652_p3 = ((icmp_ln17_fu_327_p2[0:0] == 1'b1) ? 13'd1 : add_ln17_1_fu_646_p2);

assign select_ln17_fu_879_p3 = ((or_ln17_reg_1574[0:0] == 1'b1) ? 4'd0 : r_fu_128);

assign select_ln19_14_cast_fu_1016_p1 = select_ln19_1_fu_1009_p3;

assign select_ln19_1_fu_1009_p3 = ((and_ln17_1_reg_1585[0:0] == 1'b1) ? add_ln19_fu_996_p2 : select_ln17_fu_879_p3);

assign select_ln19_2_fu_1068_p3 = ((and_ln17_1_reg_1585[0:0] == 1'b1) ? p_mid1402_fu_1020_p2 : select_ln17_2_fu_950_p3);

assign select_ln19_3_fu_1138_p3 = ((and_ln17_1_reg_1585[0:0] == 1'b1) ? add_ln1169_14_fu_1120_p2 : select_ln17_3_fu_975_p3);

assign select_ln19_4_fu_1145_p3 = ((and_ln17_1_reg_1585[0:0] == 1'b1) ? add_ln1169_15_fu_1126_p2 : select_ln17_4_fu_982_p3);

assign select_ln19_5_fu_1152_p3 = ((and_ln17_1_reg_1585[0:0] == 1'b1) ? add_ln1169_16_fu_1132_p2 : select_ln17_5_fu_989_p3);

assign select_ln19_6_fu_638_p3 = ((or_ln17_fu_401_p2[0:0] == 1'b1) ? 11'd1 : add_ln19_1_fu_632_p2);

assign select_ln19_fu_1002_p3 = ((or_ln19_1_reg_1594[0:0] == 1'b1) ? 4'd0 : c_fu_120);

assign select_ln21_1_fu_1165_p3 = ((and_ln19_reg_1599[0:0] == 1'b1) ? add_ln21_fu_1159_p2 : select_ln19_fu_1002_p3);

assign select_ln21_2_fu_1204_p3 = ((and_ln19_reg_1599[0:0] == 1'b1) ? add_ln1169_17_fu_1186_p2 : select_ln19_3_fu_1138_p3);

assign select_ln21_3_fu_1216_p3 = ((and_ln19_reg_1599[0:0] == 1'b1) ? add_ln1169_18_fu_1192_p2 : select_ln19_4_fu_1145_p3);

assign select_ln21_4_fu_1228_p3 = ((and_ln19_reg_1599[0:0] == 1'b1) ? add_ln1169_19_fu_1198_p2 : select_ln19_5_fu_1152_p3);

assign select_ln21_5_fu_624_p3 = ((or_ln19_1_fu_449_p2[0:0] == 1'b1) ? 8'd1 : add_ln21_1_fu_618_p2);

assign select_ln21_7_cast_fu_1172_p1 = select_ln21_1_fu_1165_p3;

assign select_ln21_fu_479_p3 = ((or_ln21_1_fu_473_p2[0:0] == 1'b1) ? 4'd0 : k_out_fu_116);

assign sext_ln1169_fu_817_p1 = $signed(sub_ln1169_1_fu_811_p2);

assign sext_ln1171_3_fu_509_p1 = $signed(sub_ln1171_fu_503_p2);

assign shl_ln1171_1_fu_554_p2 = add_ln1171_4_fu_548_p2 << 10'd2;

assign shl_ln1171_2_fu_589_p2 = add_ln1171_8_fu_583_p2 << 10'd2;

assign shl_ln1171_fu_519_p2 = add_ln1171_fu_513_p2 << 10'd2;

assign shl_ln737_1_fu_1346_p3 = {{add_ln415_fu_1340_p2}, {10'd0}};

assign shl_ln737_2_fu_1390_p3 = {{add_ln415_1_fu_1384_p2}, {10'd0}};

assign shl_ln737_s_fu_1302_p3 = {{layer3_output_V_q1}, {10'd0}};

assign sub_ln1169_1_fu_811_p2 = (zext_ln1169_4_fu_796_p1 - zext_ln1169_5_fu_807_p1);

assign sub_ln1169_2_fu_845_p2 = (p_shl20_cast_fu_827_p4 - p_shl21_cast_fu_836_p4);

assign sub_ln1169_3_fu_914_p2 = (zext_ln1169_6_fu_899_p1 - zext_ln1169_7_fu_910_p1);

assign sub_ln1169_4_fu_944_p2 = (p_shl22_cast_fu_926_p4 - p_shl23_cast_fu_935_p4);

assign sub_ln1169_5_fu_1050_p2 = (zext_ln1169_8_fu_1034_p1 - zext_ln1169_9_fu_1046_p1);

assign sub_ln1169_6_fu_1099_p2 = (zext_ln1169_10_fu_1083_p1 - zext_ln1169_11_fu_1095_p1);

assign sub_ln1169_fu_737_p2 = (zext_ln1169_fu_721_p1 - zext_ln1169_1_fu_733_p1);

assign sub_ln1171_fu_503_p2 = (zext_ln1171_1_fu_499_p1 - zext_ln1171_fu_487_p1);

assign tmp_10_fu_1075_p3 = {{select_ln19_2_fu_1068_p3}, {4'd0}};

assign tmp_11_fu_1087_p3 = {{select_ln19_2_fu_1068_p3}, {2'd0}};

assign tmp_12_fu_1329_p3 = grp_fu_1434_p2[32'd9];

assign tmp_13_fu_1373_p3 = grp_fu_1442_p2[32'd9];

assign tmp_14_fu_1417_p3 = grp_fu_1450_p2[32'd9];

assign tmp_1_fu_725_p3 = {{empty_fu_707_p2}, {2'd0}};

assign tmp_2_fu_789_p3 = {{add_ln15_1_reg_1535}, {4'd0}};

assign tmp_3_fu_800_p3 = {{add_ln15_1_reg_1535}, {2'd0}};

assign tmp_4_fu_1026_p3 = {{p_mid1402_fu_1020_p2}, {4'd0}};

assign tmp_56_cast_fu_1253_p3 = {{empty_158_fu_1247_p2}, {3'd0}};

assign tmp_5_fu_1038_p3 = {{p_mid1402_fu_1020_p2}, {2'd0}};

assign tmp_6_fu_491_p3 = {{select_ln21_fu_479_p3}, {4'd0}};

assign tmp_7_fu_1240_p3 = {{select_ln21_reg_1607}, {3'd0}};

assign tmp_9_fu_903_p3 = {{select_ln15_1_reg_1552}, {2'd0}};

assign tmp_fu_892_p3 = {{select_ln15_1_reg_1552}, {4'd0}};

assign tmp_s_fu_713_p3 = {{empty_fu_707_p2}, {4'd0}};

assign trunc_ln1245_1_fu_1354_p1 = grp_fu_1442_p2[25:0];

assign trunc_ln1245_2_fu_1398_p1 = grp_fu_1450_p2[25:0];

assign trunc_ln1245_fu_1310_p1 = grp_fu_1434_p2[25:0];

assign trunc_ln717_1_fu_1363_p4 = {{add_ln1245_1_fu_1357_p2[25:10]}};

assign trunc_ln717_2_fu_1407_p4 = {{add_ln1245_2_fu_1401_p2[25:10]}};

assign trunc_ln717_s_fu_1319_p4 = {{add_ln1245_fu_1313_p2[25:10]}};

assign xor_ln15_fu_353_p2 = (icmp_ln17_fu_327_p2 ^ 1'd1);

assign xor_ln17_fu_419_p2 = (icmp_ln19_fu_383_p2 ^ 1'd1);

assign xor_ln19_fu_455_p2 = (1'd1 ^ and_ln17_1_fu_437_p2);

assign zext_ln1169_10_fu_1083_p1 = tmp_10_fu_1075_p3;

assign zext_ln1169_11_fu_1095_p1 = tmp_11_fu_1087_p3;

assign zext_ln1169_12_fu_1117_p1 = select_ln17_1_reg_1579;

assign zext_ln1169_13_fu_1182_p1 = p_mid1383_fu_1176_p2;

assign zext_ln1169_14_fu_1211_p1 = select_ln21_2_fu_1204_p3;

assign zext_ln1169_15_fu_1223_p1 = select_ln21_3_fu_1216_p3;

assign zext_ln1169_16_fu_1235_p1 = select_ln21_4_fu_1228_p3;

assign zext_ln1169_1_fu_733_p1 = tmp_1_fu_725_p3;

assign zext_ln1169_2_fu_761_p1 = empty_156_fu_755_p2;

assign zext_ln1169_3_fu_786_p1 = add_ln15_1_reg_1535;

assign zext_ln1169_4_fu_796_p1 = tmp_2_fu_789_p3;

assign zext_ln1169_5_fu_807_p1 = tmp_3_fu_800_p3;

assign zext_ln1169_6_fu_899_p1 = tmp_fu_892_p3;

assign zext_ln1169_7_fu_910_p1 = tmp_9_fu_903_p3;

assign zext_ln1169_8_fu_1034_p1 = tmp_4_fu_1026_p3;

assign zext_ln1169_9_fu_1046_p1 = tmp_5_fu_1038_p3;

assign zext_ln1169_fu_721_p1 = tmp_s_fu_713_p3;

assign zext_ln1171_1_fu_499_p1 = tmp_6_fu_491_p3;

assign zext_ln1171_2_fu_537_p1 = add_ln1171_2_fu_531_p2;

assign zext_ln1171_3_fu_572_p1 = add_ln1171_6_fu_566_p2;

assign zext_ln1171_4_fu_607_p1 = add_ln1171_10_fu_601_p2;

assign zext_ln1171_fu_487_p1 = select_ln21_fu_479_p3;

assign zext_ln15_1_fu_349_p1 = select_ln15_1_fu_341_p3;

assign zext_ln15_2_fu_783_p1 = select_ln15_1_reg_1552;

assign zext_ln15_fu_701_p1 = kr_1_reg_1526;

assign zext_ln17_1_fu_886_p1 = add_ln17_reg_1569;

assign zext_ln17_2_fu_415_p1 = select_ln17_1_fu_407_p3;

assign zext_ln17_3_fu_889_p1 = select_ln17_1_reg_1579;

assign zext_ln17_fu_704_p1 = kc_1_reg_1521;

assign zext_ln415_1_fu_1380_p1 = tmp_13_fu_1373_p3;

assign zext_ln415_2_fu_1424_p1 = tmp_14_fu_1417_p3;

assign zext_ln415_fu_1336_p1 = tmp_12_fu_1329_p3;

endmodule //LeNet_LeNet_Pipeline_kernel_row_loop_row_loop_column_loop_output_channel
